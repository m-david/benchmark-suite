<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
    Ignite Spring configuration file to startup Ignite cache.

    This file demonstrates how to configure cache using Spring. Provided cache
    will be created on node startup.

    Use this configuration file when running HTTP REST examples (see 'examples/rest' folder).

    When starting a standalone node, you need to execute the following command:
    {IGNITE_HOME}/bin/ignite.{bat|sh} examples/config/ignite-cache-local.xml

    When starting Ignite from Java IDE, pass path to this file to Ignition:
    Ignition.start("examples/config/ignite-cache-local.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="ignite.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">

        <!--<property name="dataStorageConfiguration">-->
        <property name="dataStorageConfiguration">
            <bean class="org.apache.ignite.configuration.DataStorageConfiguration">
                <!--
                    Default memory region that grows endlessly. A cache is bound to this memory region
                    unless it sets another one in its CacheConfiguration.
                -->
                <property name="defaultDataRegionConfiguration">
                    <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                        <property name="name" value="Default_Region"/>
                        <!-- 50 MB memory region with disabled eviction -->
                        <property name="initialSize" value="#{20 * 1024 * 1024}"/>
                        <property name="maxSize"     value="#{50 * 1024 * 1024}"/>
                    </bean>
                </property>

                <property name="pageSize" value="4096"/>

                <!-- Defining several data regions for different memory regions -->
                <property name="dataRegionConfigurations">
                    <list>

                        <!--<bean class="org.apache.ignite.configuration.DataRegionConfiguration">-->
                            <!--<property name="name" value="Benchmark_Region"/>-->
                            <!--&lt;!&ndash; Memory region of 256 MB initial/max size. &ndash;&gt;-->
                            <!--<property name="initialSize"    value="#{512 * 1024 * 1024}"/>-->
                            <!--<property name="maxSize"        value="#{512 * 1024 * 1024}"/>-->
                            <!--&lt;!&ndash; Enabling eviction for this memory region &ndash;&gt;-->
                            <!--<property name="pageEvictionMode" value="RANDOM_2_LRU"/>-->
                            <!--<property name="persistenceEnabled" value="false"/>-->
                        <!--</bean>-->

                        <bean class="org.apache.ignite.configuration.DataRegionConfiguration">
                            <property name="name" value="Benchmark_Region"/>
                            <!-- Memory region of 4 GB initial/max size. -->
                            <property name="initialSize"    value="#{4L * 1024 * 1024 * 1024}"/>
                            <property name="maxSize"        value="#{4L * 1024 * 1024 * 1024}"/>
                            <!-- Enabling eviction for this memory region -->
                            <property name="pageEvictionMode" value="RANDOM_2_LRU"/>
                            <property name="persistenceEnabled" value="false"/>
                        </bean>


                    </list>
                </property>
            </bean>
        </property>

        <property name="cacheConfiguration">
            <list>
                <!-- Partitioned cache example configuration (Atomic mode). -->
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="default"/>
                    <property name="atomicityMode" value="ATOMIC"/>
                    <property name="backups" value="1"/>
                </bean>

                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="RiskTradeMapRead"/>
                    <property name="dataRegionName" value="Benchmark_Region"/>
                    <property name="sqlSchema" value="PUBLIC"/>
                    <property name="cacheMode" value="PARTITIONED"/>

                    <property name="queryEntities">
                        <list>
                            <bean class="org.apache.ignite.cache.QueryEntity">
                                <property name="valueType"
                                          value="com.ignite.poc.model.RiskTrade"/>
                                <property name="fields">
                                    <map>
                                        <entry key="id" value="java.lang.Integer"/>
                                        <entry key="book" value="java.lang.String"/>
                                        <entry key="traderName" value="java.lang.String"/>
                                        <entry key="settleCurrency" value="java.lang.String"/>
                                        <entry key="salesPerson" value="java.lang.String"/>
                                    </map>
                                </property>
                                <property name="indexes">
                                    <list>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="book"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="id"/>
                                        </bean>
                                        <bean class="org.apache.ignite.cache.QueryIndex">
                                            <constructor-arg value="salesPerson"/>
                                        </bean>
                                    </list>
                                </property>
                            </bean>
                        </list>
                    </property>

                    <!-- Enabling on-heap caching for this distributed cache. -->
                    <property name="onheapCacheEnabled" value="false"/>
                    <property name="atomicityMode" value="ATOMIC"/>
                    <property name="backups" value="1"/>
                    <!--<property name="memoryPolicyName" value="EMPTY_Region_Eviction"/>-->
                </bean>


                <!-- Partitioned cache example configuration (Atomic mode). -->
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="RiskTradeMapOffheap"/>
                    <property name="dataRegionName" value="Benchmark_Region"/>
                    <property name="sqlSchema" value="PUBLIC"/>
                    <property name="cacheMode" value="PARTITIONED"/>
                    <!-- Enabling on-heap caching for this distributed cache. -->
                    <property name="onheapCacheEnabled" value="false"/>
                    <property name="atomicityMode" value="ATOMIC"/>
                    <property name="backups" value="1"/>

                </bean>

            </list>
        </property>

        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <!-- Initial local port to listen to. -->
                <property name="localPort" value="48500"/>

                <!-- Changing local port range. This is an optional action. -->
                <property name="localPortRange" value="2"/>

                <!-- Setting up IP finder for this cluster -->
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!--
                                Addresses and port range of nodes from
                                the first cluster.
                                127.0.0.1 can be replaced with actual IP addresses
                                or host names. Port range is optional.
                                -->
                                <value>172.30.0.205:48500..48501</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>

        <!--
        Explicitly configure TCP communication SPI changing local
        port number for the nodes from the first cluster.
        -->
        <property name="communicationSpi">
            <bean class="org.apache.ignite.spi.communication.tcp.TcpCommunicationSpi">
                <property name="localPort" value="48100"/>
            </bean>
        </property>


        <property name="clientConnectorConfiguration">
            <bean class="org.apache.ignite.configuration.ClientConnectorConfiguration">

                <property name="port" value="40100"/>
                <property name="portRange" value="2"/>
            </bean>
        </property>

    </bean>
</beans>
